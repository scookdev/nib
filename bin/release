#! /bin/bash

# update commands document
docker run \
  --rm \
  -v $PWD:/usr/src/app \
  -w /usr/src/app \
  ruby:alpine bin/update_docs

# fail release if commands changed (need to commit first)
if [[ $(git status | grep docs/commands.md) ]]; then
  echo "ERROR:

The commands document (docs/commands.md) has been updated. \
Please commit the changes and try again."

  exit 1
fi

NIB_VERSION=$(cat VERSION)
LATEST="$(
  curl --silent https://raw.githubusercontent.com/technekes/nib/latest/VERSION
)"

if [[ $(git status | grep VERSION) ]]; then
  # fail release if VERSION file changed but not committed
  echo "ERROR:

The VERSION file has changed but not been committed. \
Please commit the changes and try again."

  exit 1
elif [ "$NIB_VERSION" == "$LATEST" ]; then
  # fail release if VERSION file has not been incremented
  echo "ERROR:

Please update the VERSION file, it currently matches the previous release"

  exit 1
fi

case $1 in
  --pre)
    echo "pre-release, not publishing \"latest\" tag"

    release_type="beta"
    ;;
  *)
    if [[ $(git symbolic-ref --short -q HEAD) != "master" ]]; then
      echo "Tried to release from a branch other than master without --pre"
      exit 0
    fi
    relase_type="latest"
    ;;
esac

# delete local "latest" tag
git tag -d "${release_type}"

# delete remote "latest" tag
git push origin ":refs/tags/${release_type}"

# tag current commit with "latest"
git tag "${release_type}"

# tag with version from VERSION
git tag "v$(cat VERSION)"

# push to origin
git push origin HEAD --tag
