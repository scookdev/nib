#!/bin/bash
#
# Checks first argument for help or version option
#
#/* vim: set filetype=sh : */

source "/usr/local/bin/_common"

print_common_usage() {
  echo "Usage: nib ${1} [SERVICE]"
}

print_help_options() {
  echo "Options:
  -h, --help      Print usage
      --version   Print version information
"
}

print_services() {
  echo "  " $(printf -- '%s\n' $(services))
}

print_command_instructions() {
  echo "  " $(printf -- '%s\n' "${COMMANDS[@]}" | grep $COMMAND | awk -F '|' '{print $3}')
}

show_common_help() {
  echo "$(print_common_usage $COMMAND)

$(print_command_instructions)

Services:
$(print_services)"
}

COMMANDS=(
  "attach|        |Attach an interactive shell session to a running container"
  "bootstrap|     |Runs the bootstrap script for the requested app (or all apps if 'apps' is specified)"
  "bundle|        |Run bundle for the given service"
  "console|       |Start a REPL session for the given service"
  "debug|         |Connect to a running byebug server for a given service"
  "guard"         "Run the guard command for the given service"
  "rails|         |Run the rails command for the given service"
  "rake|          |Run the rake command for the given service"
  "rspec|         |Runs the rspec command for the given service"
  "rubocop|       |Runs the rubocop command for the given service"
  "run|           |Wraps normal 'docker-compose run' to ensure that --rm is always passed"
  "shell|         |Start a shell session in a one-off service container"
  "update|        |Download the latest version of the nib tool"
)

version() {
  echo $(cat /usr/local/bin/VERSION)
}

check_for_updates() {
  LATEST=$(curl --silent https://raw.githubusercontent.com/technekes/nib/master/VERSION)
  NIB_VERSION=$(version)

  if [ "$NIB_VERSION" != "$LATEST" ]; then
    echo ""
    echo "An update avaiable is available for nib: $LATEST"
    echo "Use 'nib update' to pull the latest version"
  fi
}

print_commands() {
  echo "Commands:"
  for COMMAND in "${COMMANDS[@]}"; do
    echo "    ${COMMAND//|/}"
  done
}

case $1 in
  -h|--help|help)
    if [ -n "$(type -t show_help)" ]; then
      show_help
    else
      show_common_help
    fi

    check_for_updates
    exit 0
    ;;
  --version|version)
    version

    check_for_updates
    exit 0
    ;;
esac
